<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.0.xsd


						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!--扫描service-->
	<context:component-scan base-package="frame"/>

	<!-- 第一步：数据源 -->
	 <!-- 扫描资源文件 -->
	   <context:property-placeholder location="classpath:jdbc.properties"/>

	   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	   		<property name="driverClass" value="${jdbc.driver}"/>
	   		<property name="jdbcUrl" value="${jdbc.url}"/>
	   		<property name="user" value="${jdbc.username}"/>
	   		<property name="password" value="${jdbc.password}"/>
	   </bean>

	<!-- 第二步：配置sqlSessionFactoty，生产sqlSession回话 -->
	 <!-- 第二步：创建工厂 -->
	   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	   		<property name="dataSource" ref="dataSource"/>
	   		<!-- 加载配置文件 -->
	   		<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
	   </bean>
	<!-- 配置mybatis接口代理扫描
		* namespace必须是接口全类路径名
		* 映射文件sql语句字段的id必须和接口方法名一致
		* 映射文件必须和接口在同一个目录下面，且名称相同。
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="frame.study.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<!-- 第三步：配置事务 -->
	<!-- 1.定义事务管理平台 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 2.通知 -->
	<tx:advice id="txAdive" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3.切面 -->
	<aop:config>
		<aop:advisor advice-ref="txAdive" pointcut="execution(* frame.study.service.*.*(..))"/>
	</aop:config>

</beans>